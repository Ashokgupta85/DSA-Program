public class CircularQueue {
    static class circular_Queue{
        static int arr[];
        static int size;
        static int rear=-1;
        static int front=-1;
        circular_Queue(int n){
            arr=new int[n];
            this.size=n;
        }
        public static boolean checkEmpty(){
            return rear==-1 && front==-1;
        }
        public static boolean checkFull(){
            return ( rear+1)%size==front;
        }
        public static void insert(int elem){
            if(checkFull()){
                System.out.println("Queue is full");
                return;
            }
            if(front==-1){
                front=0;
            }
            rear=(rear+1)%size;
            arr[rear]=elem;
        }
        public static int Remove(){
            if(checkEmpty()){
                System.out.println("Queue is empty");
                return -1;
            }
            int result=arr[front];
            if(rear==front){
                rear=-1;
                front=-1;
            }else{
                front=(front+1)%size;
            }
            return result;
        }
    }
    public static void main(String[] args){
        circular_Queue q=new circular_Queue(4);
        q.insert(2);
        q.insert(3);
        q.insert(5);
        q.insert(6);
        q.Remove();
        q.insert(8);
        q.Remove();
        q.insert(10);
        while(!q.checkEmpty()){
            System.out.println(q.Remove());
        }
    }
}
