Given a string s, return the longest 
palindromic
 
substring
 in s.

 

Example 1:

Input: s = "babad"
Output: "bab"
Explanation: "aba" is also a valid answer.
Example 2:

Input: s = "cbbd"
Output: "bb"


//Solution

class Solution {
    public String longestPalindrome(String s) {
      boolean dp[][]=new boolean[s.length()][s.length()];
      String st="";
      int len=0;
      for(int gap=0;gap<s.length();gap++){
          for(int i=0,j=gap;j<dp.length;i++,j++){
              if(gap==0){ //esme string ki length 1 hogi 
                  dp[i][j]=true;
              }else if(gap==1){  //esme string ki length 2 hogi only
                  if(s.charAt(i)==s.charAt(j)){
                      dp[i][j]=true;
                  }else{
                      dp[i][j]=false;
                  }
              }else{
                  if(s.charAt(i)==s.charAt(j) && dp[i+1][j-1]==true){
                      dp[i][j]=true;
                  }else{
                      dp[i][j]=false;
                  }
              }
          
              if(dp[i][j] && gap+1>len){
                    len=gap+1;
                    st=s.substring(i,j+1);
        }
      }
      }
      return st;
     }

}
