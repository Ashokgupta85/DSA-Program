Given an array of integers heights representing the histogram's bar height where the width of each bar is 1, return the area of the largest rectangle in the histogram.

 

Example 1:


Input: heights = [2,1,5,6,2,3]
Output: 10
Explanation: The above is a histogram where width of each bar is 1.
The largest rectangle is shown in the red area, which has an area = 10 units.
Example 2:


Input: heights = [2,4]
Output: 4

//Solution

class Solution {
    public int largestRectangleArea(int[] arr) {
        
        int LeftB[]=new int[arr.length];
         int RightB[]=new int[arr.length];
        Stack<Integer>st=new Stack<>();
        st.push(arr.length-1);
        LeftB[arr.length-1]=arr.length;
        for(int i=arr.length-2;i>=0;i--){
            while(st.size()>0 && arr[i]<=arr[st.peek()]){
                st.pop();
            }
            if(st.size()==0){
                LeftB[i]=arr.length;
            }else{
                LeftB[i]=st.peek();
            }
            st.push(i);
        }
        st=new Stack<>();
         st.push(0);
        RightB[0]=-1;
        for(int i=1;i<arr.length;i++){
            while(st.size()>0 && arr[i]<=arr[st.peek()]){
                st.pop();
            }
            if(st.size()==0){
             RightB[i]=-1;
            }else{
                RightB[i]=st.peek();
            }
            st.push(i);
        }
             int Area=0;
             int MaxArea=0;
        for(int i=0;i<arr.length;i++){
            int width=LeftB[i]-RightB[i]-1;
            Area=arr[i]*width;
           MaxArea=Math.max(MaxArea,Area);
        }
        return MaxArea;
    }
}
