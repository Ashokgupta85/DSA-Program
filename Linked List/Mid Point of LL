public class MidPointLL {
    public static Node<Integer>  midPoint(Node<Integer>head){
        if(head==null || head.next==null){
            return head;
        }
        Node<Integer>slow=head;
        Node<Integer>fast=head;
        while(fast.next!=null && fast.next.next!=null){
            slow=slow.next;
            fast=fast.next.next;
        }
        return slow;
    }
    public static Node<Integer> takeInput(){
        Scanner sc= new Scanner(System.in);
        int data=sc.nextInt();
        Node<Integer> head=null,tail=null;
        while(data!=-1){
            Node<Integer> currentNode=new Node<>(data);
            if(head==null){
                head=currentNode;
                tail=currentNode;
            }
            else{
                tail.next=currentNode;
                tail=currentNode;
            }
            data=sc.nextInt();
        }
        return head;
    }
    public static void print(Node<Integer> head){
        Node<Integer>temp=head;
        while(temp!=null){
            System.out.print(temp.data+" ");
            temp=temp.next;

        }

    }
    public static void main(String[] args){
        Node<Integer> head=takeInput();
        print(head);
        System.out.println();
        Node<Integer> a=midPoint(head);
        System.out.print(a.data);
    }



}
