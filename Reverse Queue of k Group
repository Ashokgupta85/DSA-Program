import java.util.LinkedList;
import java.util.Queue;
import java.util.Stack;

public class ReverseQOFKGroup {
    public static Queue<Integer> modifyQueue(Queue<Integer> q, int k) {
        Queue<Integer> que=new LinkedList<>();
        Stack<Integer> st=new Stack<>();
        int i=0;
        while(i<k){
            st.push(q.poll());
            i++;
        }
        while(!st.isEmpty()){
            que.add(st.pop());
        }
        while(!q.isEmpty()) {
            que.add(q.remove());
        }
        return que;
    }
    public static void main(String[] args) {

        Queue<Integer> q = new LinkedList<>();
        int arr[] = {10, 20, 30, 40, 50};
        int k=3;
        for (int i = 0; i < arr.length; i++) {
            q.add(arr[i]);
        }
         Queue<Integer>que=modifyQueue(q,k);
        for (int i = 0; i < arr.length; i++) {
            System.out.print(que.remove()+ " ");
        }
    }
}
//output=> 30,20,10,40,50


