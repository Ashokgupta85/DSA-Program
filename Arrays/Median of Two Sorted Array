Given two sorted arrays nums1 and nums2 of size m and n respectively, return the median of the two sorted arrays.

The overall run time complexity should be O(log (m+n)).

 

Example 1:

Input: nums1 = [1,3], nums2 = [2]
Output: 2.00000
Explanation: merged array = [1,2,3] and median is 2.
Example 2:

Input: nums1 = [1,2], nums2 = [3,4]
Output: 2.50000
Explanation: merged array = [1,2,3,4] and median is (2 + 3) / 2 = 2.5.

//Solution

class Solution {
    public double findMedianSortedArrays(int[] nums1, int[] nums2) {
        int m=nums1.length;
        int n=nums2.length;
        int nums3[]=new int[m+n];
       int k=0;
       int i=0;
        int j=0;
        while(i<m && j<n){
            if(nums1[i]<nums2[j]){
                nums3[k]=nums1[i];
                i++;
                k++;
            }
            else{
                nums3[k]=nums2[j];
            j++;
            k++;
        }
        
    }
    while(i<m){
         nums3[k]=nums1[i];
                i++;
                k++; 
    }
    while(j<n){
            nums3[k]=nums2[j];
            j++;
            k++;
    }
        if((n+m)%2==0){
            int mid=(0+n+m-1)/2;
            float sum=(float)(nums3[mid]+nums3[mid+1])/2;
            
            return sum;
        }
        else{
             int mid=(0+n+m-1)/2;
              double sum=nums3[mid];
             
            return sum;
        }
    
}
}
